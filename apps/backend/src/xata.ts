// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Comment",
    checkConstraints: {
      Comment_xata_id_length_xata_id: {
        name: "Comment_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      taskId_link: {
        name: "taskId_link",
        columns: ["taskId"],
        referencedTable: "Task",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      userId_link: {
        name: "userId_link",
        columns: ["userId"],
        referencedTable: "User",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_Comment_xata_id_key: {
        name: "_pgroll_new_Comment_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "content",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "taskId",
        type: "link",
        link: { table: "Task" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"Task"}',
      },
      {
        name: "userId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"User"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "Project",
    checkConstraints: {
      Project_xata_id_length_xata_id: {
        name: "Project_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      teamId_link: {
        name: "teamId_link",
        columns: ["teamId"],
        referencedTable: "Team",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      Project__pgroll_new_name_key: {
        name: "Project__pgroll_new_name_key",
        columns: ["name"],
      },
      _pgroll_new_Project_xata_id_key: {
        name: "_pgroll_new_Project_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "teamId",
        type: "link",
        link: { table: "Team" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"Team"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "Task",
    checkConstraints: {
      Task_xata_id_length_xata_id: {
        name: "Task_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      assignedToId_link: {
        name: "assignedToId_link",
        columns: ["assignedToId"],
        referencedTable: "User",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      projectId_link: {
        name: "projectId_link",
        columns: ["projectId"],
        referencedTable: "Project",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      Task__pgroll_new_description_key: {
        name: "Task__pgroll_new_description_key",
        columns: ["description"],
      },
      _pgroll_new_Task_xata_id_key: {
        name: "_pgroll_new_Task_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "assignedToId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"User"}',
      },
      {
        name: "description",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "dueDate",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "projectId",
        type: "link",
        link: { table: "Project" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"Project"}',
      },
      {
        name: "status",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "'in-progress'::text",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "Team",
    checkConstraints: {
      Team_xata_id_length_xata_id: {
        name: "Team_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      adminId_link: {
        name: "adminId_link",
        columns: ["adminId"],
        referencedTable: "User",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      Team__pgroll_new_name_key: {
        name: "Team__pgroll_new_name_key",
        columns: ["name"],
      },
      _pgroll_new_Team_xata_id_key: {
        name: "_pgroll_new_Team_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "adminId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"User"}',
      },
      {
        name: "description",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "TeamMember",
    checkConstraints: {
      TeamMember_xata_id_length_xata_id: {
        name: "TeamMember_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      teamId_link: {
        name: "teamId_link",
        columns: ["teamId"],
        referencedTable: "Team",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
      userId_link: {
        name: "userId_link",
        columns: ["userId"],
        referencedTable: "User",
        referencedColumns: ["xata_id"],
        onDelete: "CASCADE",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_TeamMember_xata_id_key: {
        name: "_pgroll_new_TeamMember_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "role",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "'member'::text",
        comment: "",
      },
      {
        name: "teamId",
        type: "link",
        link: { table: "Team" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"Team"}',
      },
      {
        name: "userId",
        type: "link",
        link: { table: "User" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"User"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "User",
    checkConstraints: {
      User_xata_id_length_xata_id: {
        name: "User_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      User__pgroll_new_email_key: {
        name: "User__pgroll_new_email_key",
        columns: ["email"],
      },
      _pgroll_new_User_xata_id_key: {
        name: "_pgroll_new_User_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "email",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "password",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "role",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "'member'::text",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Comment = InferredTypes["Comment"];
export type CommentRecord = Comment & XataRecord;

export type Project = InferredTypes["Project"];
export type ProjectRecord = Project & XataRecord;

export type Task = InferredTypes["Task"];
export type TaskRecord = Task & XataRecord;

export type Team = InferredTypes["Team"];
export type TeamRecord = Team & XataRecord;

export type TeamMember = InferredTypes["TeamMember"];
export type TeamMemberRecord = TeamMember & XataRecord;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type DatabaseSchema = {
  Comment: CommentRecord;
  Project: ProjectRecord;
  Task: TaskRecord;
  Team: TeamRecord;
  TeamMember: TeamMemberRecord;
  User: UserRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Simon-Muchemi-s-workspace-hveses.us-east-1.xata.sh/db/task-management",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
